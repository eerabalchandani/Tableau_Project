<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Overview+ (Assigmnent 2 Sample Data)' inline='true' name='federated.0lqypjj08heq81129dt8c1rlz97p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Assigmnent 2 Sample Data' name='excel-direct.0e2626s191taat16oyf150g6a0tz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/eerab/OneDrive/Documents/Eera Balchandani/BITS PILANI MTech/SEM2/SEZG555_DVI/Assigmnent 2 Sample Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0e2626s191taat16oyf150g6a0tz' name='Finances' table='[Finances$]' type='table'>
          <columns gridOrigin='A1:M1001:no:A1:M1001:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='real' name='2021 Revenue' ordinal='2' />
            <column datatype='real' name='2021 Expenses' ordinal='3' />
            <column datatype='real' name='2021 Profit' ordinal='4' />
            <column datatype='real' name='2021 Growth %' ordinal='5' />
            <column datatype='integer' name='2020 Revenue' ordinal='6' />
            <column datatype='real' name='2020 Expenses' ordinal='7' />
            <column datatype='real' name='2020 Profit' ordinal='8' />
            <column datatype='real' name='2020 Growth %' ordinal='9' />
            <column datatype='real' name='2019 Revenue' ordinal='10' />
            <column datatype='real' name='2019 Expenses' ordinal='11' />
            <column datatype='real' name='2019 Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0e2626s191taat16oyf150g6a0tz' name='Overview' table='[Overview$]' type='table'>
            <columns gridOrigin='A1:I1001:no:A1:I1001:0' header='yes' outcome='2'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='string' name='Industry' ordinal='2' />
              <column datatype='string' name='Description' ordinal='3' />
              <column datatype='integer' name='Year Founded' ordinal='4' />
              <column datatype='integer' name='Employees' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='City' ordinal='7' />
              <column datatype='string' name='Metro Area' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.0e2626s191taat16oyf150g6a0tz' name='Finances' table='[Finances$]' type='table'>
            <columns gridOrigin='A1:M1001:no:A1:M1001:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='real' name='2021 Revenue' ordinal='2' />
              <column datatype='real' name='2021 Expenses' ordinal='3' />
              <column datatype='real' name='2021 Profit' ordinal='4' />
              <column datatype='real' name='2021 Growth %' ordinal='5' />
              <column datatype='integer' name='2020 Revenue' ordinal='6' />
              <column datatype='real' name='2020 Expenses' ordinal='7' />
              <column datatype='real' name='2020 Profit' ordinal='8' />
              <column datatype='real' name='2020 Growth %' ordinal='9' />
              <column datatype='real' name='2019 Revenue' ordinal='10' />
              <column datatype='real' name='2019 Expenses' ordinal='11' />
              <column datatype='real' name='2019 Profit' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2019 Expenses]' value='[Finances].[2019 Expenses]' />
          <map key='[2019 Profit]' value='[Finances].[2019 Profit]' />
          <map key='[2019 Revenue]' value='[Finances].[2019 Revenue]' />
          <map key='[2020 Expenses]' value='[Finances].[2020 Expenses]' />
          <map key='[2020 Growth %]' value='[Finances].[2020 Growth %]' />
          <map key='[2020 Profit]' value='[Finances].[2020 Profit]' />
          <map key='[2020 Revenue]' value='[Finances].[2020 Revenue]' />
          <map key='[2021 Expenses]' value='[Finances].[2021 Expenses]' />
          <map key='[2021 Growth %]' value='[Finances].[2021 Growth %]' />
          <map key='[2021 Profit]' value='[Finances].[2021 Profit]' />
          <map key='[2021 Revenue]' value='[Finances].[2021 Revenue]' />
          <map key='[City]' value='[Overview].[City]' />
          <map key='[Description]' value='[Overview].[Description]' />
          <map key='[Employees]' value='[Overview].[Employees]' />
          <map key='[ID (Finances)]' value='[Finances].[ID]' />
          <map key='[ID]' value='[Overview].[ID]' />
          <map key='[Industry]' value='[Overview].[Industry]' />
          <map key='[Metro Area]' value='[Overview].[Metro Area]' />
          <map key='[Name (Finances)]' value='[Finances].[Name]' />
          <map key='[Name]' value='[Overview].[Name]' />
          <map key='[State]' value='[Overview].[State]' />
          <map key='[Year Founded]' value='[Overview].[Year Founded]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Overview]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I1001:no:A1:I1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Finances]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M1001:no:A1:M1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year Founded</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year Founded]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Year Founded</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employees]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Employees</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metro Area]</local-name>
            <parent-name>[Overview]</parent-name>
            <remote-alias>Metro Area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Overview_6992D210BAA14A908A0896C2866FDA99]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (Finances)]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name (Finances)]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021 Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 Revenue]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2021 Revenue</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021 Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 Expenses]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2021 Expenses</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021 Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 Profit]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2021 Profit</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021 Growth %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 Growth %]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2021 Growth %</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Revenue]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2020 Revenue</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020 Expenses]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2020 Expenses</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020 Profit]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2020 Profit</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Growth %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020 Growth %]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2020 Growth %</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019 Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019 Revenue]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2019 Revenue</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019 Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019 Expenses]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2019 Expenses</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019 Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019 Profit]</local-name>
            <parent-name>[Finances]</parent-name>
            <remote-alias>2019 Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Expenses(2020&amp;2021)' datatype='real' name='[Calculation_1172624766870077440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2020 Expenses]+[2021 Expenses]' />
      </column>
      <column caption='Total Growth %(2020&amp;2021)' datatype='real' name='[Calculation_1172624766872014849]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2021 Growth %]+[2020 Growth %]' />
      </column>
      <column caption='Total Profit(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873223170]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2021 Profit]+[2020 Profit]' />
      </column>
      <column caption='Total Revenue(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873374723]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2021 Revenue]+[2020 Revenue]' />
      </column>
      <column caption='Expense Growth Rate' datatype='real' name='[Calculation_1172624766874234884]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([2021 Expenses] - [2020 Expenses]) / [2020 Expenses]' />
      </column>
      <column caption='Profit Growth rate ' datatype='real' name='[Calculation_2088262867118841856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[2021 Profit] - [2020 Profit]/ [2020 Profit]' />
      </column>
      <column caption='Revenue Growth rate' datatype='real' name='[Calculation_2088262867118964737]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([2021 Revenue] - [2020 Revenue]) / [2020 Revenue]' />
      </column>
      <column caption='Revenue-to-Expense RatioCalculation1' datatype='real' name='[Calculation_2088262867119534082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1172624766873374723]/[Calculation_1172624766870077440]' />
      </column>
      <column caption='Total Score' datatype='real' name='[Calculation_2088262867120156676]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOG([Calculation_1172624766873374723])+ (-LOG([Calculation_1172624766870077440]))+[Calculation_1172624766872014849]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[ID (Finances)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year Founded]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Finances' datatype='table' name='[__tableau_internal_object_id__].[Finances_6B836DEF9BDD4CCDA6167D9C62BB6862]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Overview' datatype='table' name='[__tableau_internal_object_id__].[Overview_6992D210BAA14A908A0896C2866FDA99]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1172624766872014849]' derivation='Avg' name='[avg:Calculation_1172624766872014849:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1172624766870077440]' derivation='Sum' name='[sum:Calculation_1172624766870077440:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1172624766872014849]' derivation='Sum' name='[sum:Calculation_1172624766872014849:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1172624766873374723]' derivation='Sum' name='[sum:Calculation_1172624766873374723:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2088262867118841856]' derivation='Sum' name='[sum:Calculation_2088262867118841856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2088262867119534082]' derivation='Sum' name='[sum:Calculation_2088262867119534082:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Name (Finances):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adarabarr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Announcesbuck&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Appaloosasmiling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baileycrowd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boundextrasmall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Care-La&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cityla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comparejson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crystringed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Delaycarriage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dongcom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E-Care&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fatcoffle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fincorporation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fowlwagger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ganzlux&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gravecon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenfax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hayloftmizuna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hottom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indigoholding&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Interquarrelling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Karatedistance&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Konktouch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Largestugly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loocloning&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Messrs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monotrichous&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nitrogenwoodlark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ortonville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pendulumfriction&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Porkpuddings&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pumpkinmothers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reliablepaver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Representpoppysmic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sail-Lam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scornsomalian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singlefind&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soulfulantigravity&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Streetelectrics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tamqvocone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Techis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toughtam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trantraxlax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vacuolesonerous&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vivatam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Volhouse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wiggakintail&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zamfax&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zonunocom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abaftpractised&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assurehelp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beeftester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beltssneering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blouseinsoluble&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canecorporation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chiselledcarpal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Codelane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Curlgadolinium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dalthow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Discreetcorrosive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Drunkactually&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estermourn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Feavar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Follyslushy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ganjadox&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gianttempting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gogotax&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hatit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honeycombdistressed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Improvelonely&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Insaoplex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jobin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kinlax&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lathotline&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lidarcastor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Masquerade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Millrind&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nerfheardercanapes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Overviewparrot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Planetholdings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poxhewn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Presslute&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quotelane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rehoting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rmsvivid&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saofintone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smugready&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Snobcarrot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stattechno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suckedregister&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tamtex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toughcare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Transcon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trisity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unrebuilt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vilamedia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wealthabounding&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xx-Bam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimholding&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allowuntidy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auctiongoogle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bevvyvanadium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bobcheek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cantonlux&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Circinuscategory&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colouredrecipe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cribcaused&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Detritaldartford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Domphase&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dyneinbulbous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Exilarch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fermiumdessicants&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forearmblade&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ganzgreen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glazetwang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gravefan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hot-Electrics&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hotis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inconduo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Intermitted&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;K-Job&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lamlex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lanelex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Linkedallianz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Magnesiumrocked&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mathcorporation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldsare&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nickedexaggerate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Openstrustee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pastpumpkin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pluggedword&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raisinscotta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rankfind&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Remedia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roundla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scarletcheeses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Silicon-Hex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solotechi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stiming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sumzoomit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taskspuzzled&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toughfix&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tragicultra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turbulentbridle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Unvibrant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivacode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weyrhandlers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yawningcricket&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimtech&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Congolesegossip&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allpossible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anodisingcrimp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barmpotfishified&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berateupdates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bumhercules&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chadhelpful&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clawasked&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Consistapplies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyaneous&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dentoing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Donplus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Famousknucklehead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fixnummodus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flakesmingling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Freefase&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gemsubmit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goldenware&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Groovecorporation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hexdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ibexecheeks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iscom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Istone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K-Tone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lacorporation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvianemployment&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lowdirect&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moviespotter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newjofix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nthracer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Outspruing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Physgreen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Posseratty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Putmovement&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rawchickenequip&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanfan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scarygout&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scotzone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skywalkerwhether&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spanquadin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Studyingforty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Surroundoutrageous&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Technodexon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Todaypatches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tres-How&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;U-Holdings&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valuesbilled&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winepizz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zathline&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zenzootrax&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zottex&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adenohypophysis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annoyhog&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ballerpaint&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bouquetvolt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cateredsweep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Citytrax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Condemnedgenuine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Damzoom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Deliciousgeometry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dongreen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Electionslaunch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fadalert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fintax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Foxwml&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ganzzap&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gogofan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grippingcar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haystreet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houryounger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inventtremendous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ittech&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kayelectronics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Konktraxbam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latfan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loosepause&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monkeylittle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Motorearth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nohitterright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Osmiumcrockery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Perfumedkink&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portfolioeducated&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puncturecorona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Remembergabbro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Represswellington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sailbam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scot-Lex&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sireunit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sounderfibber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Streettaxon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Supernovafishing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Techitom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thrushetrundle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trapexperts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vaia-Dax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vaiaelectronics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wightmuon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wimpleddrift&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zamhouse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zot-Lam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Acutegreaseproof&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alleluiatic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amphithalamus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bittenwheat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bollersimmigrate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canunoice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Circlechop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cranegreatest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crohnpurchasing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Domtam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dragonnode&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E-Can&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Expandcostgullible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fibrillar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Formulasbreathless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ganzhex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gleanworn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gravetrax&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hotlane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indicated&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indigoit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Interpaving&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kickminstrel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Konkdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linetax&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matelectronics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mathstreet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moleculecircle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nimcare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Opetechno&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pausehydrocarbon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pointchough&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Proteincosines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ranktech&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reveredtogether&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rowsitem&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serpentineappeals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Silicontrans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solsticeaudio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stimulusbison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sun-In&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tausnash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thinkableexecute&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tran-It&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Urethrawell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vaialane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivadom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Whinchatdates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yearflex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimtechno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alphacane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aspic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Biokaycane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloodhoundthin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bluefan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chestnutanorexia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coatforked&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comatulid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costvicious&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D-Zoocare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dingalingflee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dripcane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ericssonsafe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fax-Street&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flextone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fungreen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glandminer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grammatical&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haycorporation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holdelongation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Initialbricklayer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jayphase&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lamdombase&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lampadaire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lipped&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchuria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miaowgrinder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Needlesbosnian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Obclavate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pinterestcrannies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Placehospitable&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Precincts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rankcone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Refertilization&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rinkmusic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanzatrax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shapelessunits&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Snakechallenges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stanquote&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tampware&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tempkix&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thrushemillwright&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Touchyopposite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tripplehow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unimattax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vilahouse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wareplanet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xn-Media&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zim-Fan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abstractedchocolat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acetrans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asynchronous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bipedaldumbo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cabinetswainson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canesailfax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chloridesfixation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cogstrip&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Currymercurial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dandrill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dishesbitten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dullbocce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethanoicgreenish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Februaryvanadium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Friendlego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Geometrygene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Girollesjones&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grippingstirring&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hatlane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hookiest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inchfind&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Insistentrhinoceros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kestrelpumpion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kittensteller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexitrans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liripoopquean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matcapillary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mincemeatcontroller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;O-Tindax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oystergarrulous&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Planetice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Preworthy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quadice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quozap&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reinforceputtock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roastjittery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saotaxon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shuffleelse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Snugglyundertaker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Statuesquelook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suicided&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tancode&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Testingear&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tristone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Truesaokix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unsported&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Voltech&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Weedycavus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Xx-Com&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimkeyfind&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aldabaranbox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Avogadroethanoate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bindauthorized&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blacklane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blacktaxon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cherriesplump&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clunk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corylisten&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;D-Fincode&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dewflags&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Easterntwisted&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equalityshape&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fatsohealth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flexlane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ganzlax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Geocom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Geometrycrane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Goodmatlab&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Handgunheard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Highvivalux&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Icezunzim&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Infieldercub&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kaysolodex&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kidsdoylt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lambetech&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexila&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Magmarejoice&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mesontrekking&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nakedshrapnel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Optimismexterior&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overrestraint&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Picklescrudivore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Profilecliche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quickpolls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rednimdox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riddledinfant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sanguineprove&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smokingwidgeon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Splintstea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sub-Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tambase&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Techlux&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Temp-Holdings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Toolsavagery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Triolane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unexotically&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Viatechno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wackparticle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;X-Care&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zummalux&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Acutematrices&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allongie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anarchical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bignamjob&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonfirefailing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canuvula&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cockamamieergot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cometscasting&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crunchabout&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Domtexon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drilldrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elderlyhair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Exteriorknowing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiercearc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Formulasfunnels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ganzhouse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glycopexis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greaseperform&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hayfan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indignantant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indihow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isstreets&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kidneyedgalvanic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Konkex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lardassare&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mathstrip&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mediagreen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monitoringhaflinger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nimlux&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ozer-Dox&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peamuddy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Proficientpages&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Protractile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Recognisedwimp&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renaloutspoken&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rubypituitary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schnitzelfields&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Silit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sonredtam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stovepuck&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunsaolax&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Techdrill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thiocyanate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Truelane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ursastudying&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Villadox&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivaex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Whitefase&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yearla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zirconyl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Affinemisguided&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australisbetter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Basemuddled&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bigfan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buretteadmirable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlesresearcher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cleavagesling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Consonantizing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyclasesvg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dessertsanchovy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Doublelane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elongationmanagerial&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fixquadtech&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fooljuicer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Freezehouses&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Genusequ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golliwogg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Groovetrans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hexhouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indiin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;It-Ity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kanlux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lalane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Launchbiggest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mattouch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mediahex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Numericpigeon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;O-Zimron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Over-Hex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phystouch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Potatoeswabbit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pyretic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rawfishcomplete&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samsungclimbing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scullianpinwheel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shrimpssecurity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slicerseptum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sparrowchorizo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stupidarboreal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Technoline&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonbase&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Treslam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unadex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valvespoon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Voltstreet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zathtechi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimdex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zumlam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Age&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appliesoverrated&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Basetrax&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bignumadept&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Black-Tax&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinekogi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clerkhusky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Contandax&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cylinderscurve&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dessertsmugger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dowdyweanling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Enterwaist&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flaskssunny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Freshholdings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ganjafan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Getable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goodace&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haggardfink&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hexzoomity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Icephase&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesianheliopause&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Itemswazzed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kayis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lambam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Launchingillusion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Machinepond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mustermilk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;O-Dax&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oilyrhyolite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Overfrequency&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pickaxestiming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Potiondecathlon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rank-Fix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Receivedhorn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rezumfind&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sculptorjelly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slumpeaster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sparsegaiters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sternlinguistic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stylishhypothesis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swedenborgism&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Technostreet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonjob&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trestouch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unconsoling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vapourmammering&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Volzoom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wingfluther&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zumma-Lane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zunremlane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aldineammonium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ascendermogul&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beetleheaded&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Blendplacid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomingpeeve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cajoleavoidant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cityace&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clupeoid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crazyclausius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D-Is&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dillimported&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Efferentfinished&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fase-Bam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fawningsaves&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flexthirsty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frillyshaving&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Glaciertolerant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Goodtex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Handlersthroated&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hoeforeach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ikeamongolian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ining&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J-Unafase&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kolozsv&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lamcare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexinamex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Measuresflipping&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Muttletpocket&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Overstridden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ozerholdings&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pickyfive&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Practisemax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Quocan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reelingrebel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ridglingshod&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santechno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shadefronted&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Squeezebasement&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Subaverage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampqvotex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tempbam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Theirordered&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Totallyzonked&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Triotexon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unforegone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vilacan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waggerhooves&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;X-Lax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zer-Plus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alphalex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Assuredcarbon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belaguerra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Busylivid&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cancone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chirpskipping&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cosmicdiving&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Countslovenly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daltfase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dinggleeful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drudgelepe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Errantplastic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fearwhimbrel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fluetruffles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Funrantex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goblaces&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Granolabooby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hatelectronics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Homologize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Implorer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Initialhorseman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jayquote&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lamlax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Langedprivacy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Librationmelba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marchedsausage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miaplacidusneuroma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neodymiumscandalous&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Offerbe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plankoblateness&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pointingfunds&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Preferencehistorical&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quotedax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Resolvingadaptation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ritelepus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saoace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shovelerablaze&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Snashacceptor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Starbuckslyra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Subtletymosaic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Temptechno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toughace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trans-Dexon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trisbam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unoline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vilait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waterka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Xx--Fase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zun-Trax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adequateness&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Annoyinglyarabian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bamtexon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boxhaul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Causedunsure&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charmdrone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clapperstrict&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crashingsubmitted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dancane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delusive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dongstreet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eremenko&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Falbala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fixcan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fraternal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geigerbeneficial&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gravedengue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haulbittern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heinzvolary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydrolytic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indigolane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joblab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kincon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Linetouch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lotwee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medbase&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mountinggregarious&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nomarchy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Outbraving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Perfumegrown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portlyroomy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Purchasecrouton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ranquote&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sailtech&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salttrans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotphase&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Skillscurve&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spamfake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stripfind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Supportersfaint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Techline&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tindex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trappedvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vol-Con&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Y-Corporation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zapdex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zotcare&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adaptiverolex&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aminoshag&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angolanbronco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bitwisegland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bookingchildish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cardinalsmacked&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Citydrill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comisbeard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crushingguatemalan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Decoratorsdecipher&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drilllane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E-Tex&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fablescraper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Filletsstrategy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fowlappraiser&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georedfase&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glyderrhombus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenfan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hayit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indigocon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Interfaceaboard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Interreges&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Konkin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lardfaceimproper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisppanel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medkix&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muttonmint&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nimvivafind&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oraclemend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peardinner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pomiculturist&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prunewatchful&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Regexsay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Repartition&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rustyentertain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scoreboardchaos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Silkiness&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sootycrushing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Strange&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunviaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Techhigh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thready&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tubeverest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turbidimetry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vivaity&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Voleworry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wideeyedtempting&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yeartechno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zonhigh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abusivebong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athleticsstriker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Befriendogle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Berserkfluther&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blueshiftcrispy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cankix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chockscruffy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coiledsheriff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Damedash&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dashedcompounds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Disney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duotouch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Exactmunch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Federalistic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Footshy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ganjatam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grapegraves&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Happinesspineapple&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hatsaotam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hotlax&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inchkix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Interestingness&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jobzencane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Knock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lamtone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lineity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Med-City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minstrelhood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nescafeshameless&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Opedrill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parhelion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pricklemisfits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quotecity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Radonspoonbill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Restrainthomerun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rosychoke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sawbeloved&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sidedmisty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Soddenfurther&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stayspheroid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sumice&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanholdings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thalliumwould&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trogleguarantee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tryfanscaly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unsurmountable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Villatouch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Weepingwhisky&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zathtone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimlane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ahemparticular&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arabianagena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bastingconverse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biotain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushoil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calmbus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chenopod&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clocksgarrulous&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cormorantpassionate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;D-Ace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Donelectronics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E-Zim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Epiphyll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fatsodean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freshtechno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geoelectronics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goodhouse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hallsshotgun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hiding&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Icezap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Infectedduck&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Itquadlab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Keycone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lambdafortunate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexiholding&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Machinewarn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medunoway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myceliumamniote&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Onlytilted&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Overlane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pickledcanoeing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Powerlinnet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queryinghovers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Requote&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ribpunish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semipermeability&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Smartpans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Splashnuts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sub-Fan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Superepoch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swordsbubble&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Teenagean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tontam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Triojob&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unemancipated&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vertextractor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Voyadexon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Witchesesteemed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zummacane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zun-Ex&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Admitruppell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Annoyingsmack&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atrophymonsters&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadboiled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centerbarriers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clasticmach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cutranked&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dento-Fix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Donjob&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Factsworldcup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falterfeline&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fixlatcare&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frayedintrigue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gelatinmonths&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goldenin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Groovecane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hex-Ity&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hypergalaxypegasus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indigoplanet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Judgemicrosoft&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kayplus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laboredshocked&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lattechi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Loveboyle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meddlesomepushy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nervousdispatcher&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Novelfollicle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Outplan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peskyevaluate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Positiveneptunium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pursuitsskewer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rattlemurrelet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saltstreet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sandhillrisk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scotstrip&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Skyracket&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spandom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Studycanadian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Supremeimpress&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tessiture&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Treeelectrics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Twistedelephant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vaiatrax&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willinghungarian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zathhow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zenware&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zotjoit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Acclaimedcirl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Admonishbadelynge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Badgeless&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Betais&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bluetexon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canstrip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christiecountry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Collarbonebad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Createblender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Damelectrics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dolomitizing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dwindlecertain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Excellencerecent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fennelleaves&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forcepdark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ganymedeunique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graphicchlorine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hatvollex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hostileglove&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hottam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Incon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Islotfind&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keytouch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Knuckleheadexamples&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Landmarksbutters&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucrepickled&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mathassertive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miscutting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;O-Touch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Openjocon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parkourwoodchat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plexfix&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rageenvious&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Randrill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Relishtreasure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roundgreen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scalptowhee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Siftercockamamie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solocone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Subflex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sumtechi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tantalous&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thamesringed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toughway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turboprop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unterwalden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Visitorglands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Y-Way&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimstrip&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Government Services&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Environmental Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Consumer Products &amp; Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Travel &amp; Hospitality&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Advertising &amp; Marketing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IT Services&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Logistics &amp; Transportation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Media&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business Products &amp; Services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Food &amp; Beverage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118841856:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867119534082:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[avg:Calculation_1172624766872014849:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Finances' id='Finances_6B836DEF9BDD4CCDA6167D9C62BB6862'>
            <properties context=''>
              <relation connection='excel-direct.0e2626s191taat16oyf150g6a0tz' name='Finances' table='[Finances$]' type='table'>
                <columns gridOrigin='A1:M1001:no:A1:M1001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='real' name='2021 Revenue' ordinal='2' />
                  <column datatype='real' name='2021 Expenses' ordinal='3' />
                  <column datatype='real' name='2021 Profit' ordinal='4' />
                  <column datatype='real' name='2021 Growth %' ordinal='5' />
                  <column datatype='integer' name='2020 Revenue' ordinal='6' />
                  <column datatype='real' name='2020 Expenses' ordinal='7' />
                  <column datatype='real' name='2020 Profit' ordinal='8' />
                  <column datatype='real' name='2020 Growth %' ordinal='9' />
                  <column datatype='real' name='2019 Revenue' ordinal='10' />
                  <column datatype='real' name='2019 Expenses' ordinal='11' />
                  <column datatype='real' name='2019 Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Overview' id='Overview_6992D210BAA14A908A0896C2866FDA99'>
            <properties context=''>
              <relation connection='excel-direct.0e2626s191taat16oyf150g6a0tz' name='Overview' table='[Overview$]' type='table'>
                <columns gridOrigin='A1:I1001:no:A1:I1001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Industry' ordinal='2' />
                  <column datatype='string' name='Description' ordinal='3' />
                  <column datatype='integer' name='Year Founded' ordinal='4' />
                  <column datatype='integer' name='Employees' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='City' ordinal='7' />
                  <column datatype='string' name='Metro Area' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ID]' />
                <expression op='[ID (Finances)]' />
              </expression>
              <expression op='='>
                <expression op='[Name]' />
                <expression op='[Name (Finances)]' />
              </expression>
              <expression op='='>
                <expression op='[Year Founded]' />
                <expression op='[ID (Finances)]' />
              </expression>
            </expression>
            <first-end-point object-id='Overview_6992D210BAA14A908A0896C2866FDA99' />
            <second-end-point object-id='Finances_6B836DEF9BDD4CCDA6167D9C62BB6862' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Expenses'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='17'>Low Expenses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='real' name='[2020 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Expenses]' role='measure' type='quantitative' />
            <column caption='Total Expenses(2020&amp;2021)' datatype='real' name='[Calculation_1172624766870077440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2020 Expenses]+[2021 Expenses]' />
            </column>
            <column caption='Expense Growth Rate' datatype='real' name='[Calculation_1172624766874234884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([2021 Expenses] - [2020 Expenses]) / [2020 Expenses]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172624766870077440]' derivation='Sum' name='[sum:Calculation_1172624766870077440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1172624766874234884]' derivation='Sum' name='[sum:Calculation_1172624766874234884:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1172624766870077440])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name (Finances):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' value='true' />
            <format attr='break-on-special' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766874234884:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b07aa1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{A07A8D84-DBD6-4268-90EB-D954A2CA7193}' />
    </worksheet>
    <worksheet name='Financial Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Financial Performance Overview</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='real' name='[2020 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2020 Growth %]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2020 Revenue]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Growth %]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Revenue]' role='measure' type='quantitative' />
            <column caption='Total Expenses(2020&amp;2021)' datatype='real' name='[Calculation_1172624766870077440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2020 Expenses]+[2021 Expenses]' />
            </column>
            <column caption='Total Growth %(2020&amp;2021)' datatype='real' name='[Calculation_1172624766872014849]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Growth %]+[2020 Growth %]' />
            </column>
            <column caption='Total Revenue(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873374723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Revenue]+[2020 Revenue]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172624766870077440]' derivation='Sum' name='[sum:Calculation_1172624766870077440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1172624766872014849]' derivation='Sum' name='[sum:Calculation_1172624766872014849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1172624766873374723]' derivation='Sum' name='[sum:Calculation_1172624766873374723:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1172624766872014849])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name (Finances):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]</column>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' value='135' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk] + ([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk] + [federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]))</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{55BB0FF5-DCA8-4128-BEF2-AAFAEFCE3757}' />
    </worksheet>
    <worksheet name='Growth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='17'>Top Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='real' name='[2020 Growth %]' role='measure' type='quantitative' />
            <column datatype='real' name='[2020 Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Growth %]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Profit]' role='measure' type='quantitative' />
            <column caption='Total Growth %(2020&amp;2021)' datatype='real' name='[Calculation_1172624766872014849]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Growth %]+[2020 Growth %]' />
            </column>
            <column caption='Profit Growth rate ' datatype='real' name='[Calculation_2088262867118841856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Profit] - [2020 Profit]/ [2020 Profit]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2088262867118841856]' derivation='Max' name='[max:Calculation_2088262867118841856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172624766872014849]' derivation='Sum' name='[sum:Calculation_1172624766872014849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2088262867118841856]' derivation='Sum' name='[sum:Calculation_2088262867118841856:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[max:Calculation_2088262867118841856:qk]' included-values='in-range'>
            <min>7068488.0</min>
            <max>9373544.75</max>
          </filter>
          <filter class='categorical' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Calculation_1172624766872014849])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Admitruppell&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Affinemisguided&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Age&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ahemparticular&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Alphalex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Annoyhog&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Annoyinglyarabian&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Annoyingsmack&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Appliesoverrated&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ascendermogul&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Asynchronous&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Australisbetter&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Baileycrowd&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bamtexon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Basetrax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bastingconverse&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bigfan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bindauthorized&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bobcheek&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bonfirefailing&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Boxhaul&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Buretteadmirable&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Canstrip&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Cantonlux&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Canuvula&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Comatulid&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Crazyclausius&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Currymercurial&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;D-Ace&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Damelectrics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Deliciousgeometry&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Dessertsanchovy&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Dowdyweanling&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Drilllane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;E-Tex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Elongationmanagerial&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Epiphyll&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ethanoicgreenish&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Factsworldcup&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fadalert&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Falbala&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fase-Bam&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fixcan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fixlatcare&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Flaskssunny&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Forearmblade&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fowlwagger&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Freefase&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ganzhouse&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Georedfase&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Glazetwang&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Gravefan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Handlersthroated&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hatit&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Heinzvolary&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hexhouse&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hottam&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hottom&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hypergalaxypegasus&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ima&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Inconduo&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ining&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Insaoplex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Insistentrhinoceros&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Interestingness&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Interpaving&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Interquarrelling&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Itemswazzed&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Jayquote&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Joblab&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Judgemicrosoft&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kayelectronics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kayis&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kidsdoylt&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Konkin&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Konktraxbam&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lardassare&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lattechi&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lexinamex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lidarcastor&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lineity&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Linetax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Linetouch&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Machinepond&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Magnesiumrocked&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Masquerade&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Medunoway&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Mincemeatcontroller&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Minstrelhood&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Moviespotter&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Nakedshrapnel&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Needlesbosnian&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Nickedexaggerate&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Numericpigeon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;O-Dax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Onlytilted&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Openjocon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ortonville&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Osmiumcrockery&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Overstridden&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Peardinner&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Pendulumfriction&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Physgreen&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Phystouch&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Picklescrudivore&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Pluggedword&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Posseratty&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Puncturecorona&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Pursuitsskewer&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Rank-Fix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Rankfind&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Repartition&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Rustyentertain&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Sanfan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Saoace&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Semipermeability&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Skywalkerwhether&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Smugready&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Solocone&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Spamfake&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Sparsegaiters&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Splashnuts&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Splintstea&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Starbuckslyra&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Stayspheroid&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Strange&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Stripfind&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Stylishhypothesis&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Sumtechi&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Surroundoutrageous&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tambase&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tamtex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tantalous&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Taskspuzzled&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Techis&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Technodexon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Thready&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tindex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tocantins&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Todaypatches&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tonbase&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Toughfix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Toughtam&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Trappedvia&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Treeelectrics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Trestouch&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Triotexon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tristone&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Truesaokix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tubeverest&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Turboprop&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Turbulentbridle&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Twistedelephant&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;U-Holdings&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Unimattax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Vaiatrax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Vapourmammering&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Villadox&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Vivaex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Vivatam&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Voleworry&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Yawningcricket&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zenware&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zimholding&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zimtechno&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zonunocom&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zotcare&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zumma-Lane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zummalux&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zun-Ex&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[max:Calculation_2088262867118841856:qk]</column>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118841856:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118841856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118841856:qk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766872014849:qk] + [federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118841856:qk])</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{51581F48-2A72-4FA3-92C7-E0CEBA908A94}' />
    </worksheet>
    <worksheet name='Performance Metrics '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Performance Metrics Comparison </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='real' name='[2020 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2020 Growth %]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2020 Revenue]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Growth %]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Revenue]' role='measure' type='quantitative' />
            <column caption='Total Expenses(2020&amp;2021)' datatype='real' name='[Calculation_1172624766870077440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2020 Expenses]+[2021 Expenses]' />
            </column>
            <column caption='Total Growth %(2020&amp;2021)' datatype='real' name='[Calculation_1172624766872014849]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Growth %]+[2020 Growth %]' />
            </column>
            <column caption='Total Revenue(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873374723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Revenue]+[2020 Revenue]' />
            </column>
            <column caption='Revenue-to-Expense RatioCalculation1' datatype='real' name='[Calculation_2088262867119534082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1172624766873374723]/[Calculation_1172624766870077440]' />
            </column>
            <column caption='Total Score' datatype='real' name='[Calculation_2088262867120156676]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOG([Calculation_1172624766873374723])+ (-LOG([Calculation_1172624766870077440]))+[Calculation_1172624766872014849]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1172624766872014849]' derivation='Avg' name='[avg:Calculation_1172624766872014849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2088262867119534082]' derivation='Sum' name='[sum:Calculation_2088262867119534082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2088262867120156676]' derivation='Sum' name='[sum:Calculation_2088262867120156676:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[avg:Calculation_1172624766872014849:qk]' included-values='in-range'>
            <min>10.01</min>
            <max>15.190000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2088262867120156676])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Acetrans&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Admonishbadelynge&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Alleluiatic&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Allongie&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Aminoshag&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Appaloosasmiling&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Armet&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Atrophymonsters&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Berateupdates&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bigfan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bignumadept&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Biotain&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Blacklane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bloomingpeeve&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Bluefan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Calmbus&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Charmdrone&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Cityace&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Comatulid&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Cosmicdiving&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Curlgadolinium&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Currymercurial&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Damedash&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Damelectrics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Detritaldartford&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Dragonnode&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Drilldrill&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Drilllane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;E-Care&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Electionslaunch&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Eremenko&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Factsworldcup&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Flakesmingling&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Fooljuicer&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ganjafan&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ganzlax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Geocom&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Glaciertolerant&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Glandminer&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Goblaces&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Gogotax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Grippingstirring&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Happinesspineapple&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hostileglove&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Hot-Electrics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Indigoit&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Indihow&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Interfaceaboard&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Interquarrelling&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ittech&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Joblab&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Judgemicrosoft&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;K-Tone&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kanlux&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kayis&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Keycone&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kidsdoylt&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Kolozsv&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lamdombase&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Langedprivacy&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lathotline&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lexitrans&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lineity&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Lucrepickled&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Magnesiumrocked&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Matelectronics&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Mediagreen&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Medkix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Messrs&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Monkeylittle&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Mountinggregarious&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Nervousdispatcher&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Newjofix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;O-Zimron&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Oilyrhyolite&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Onlytilted&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Optimismexterior&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Overstridden&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Placehospitable&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Pointingfunds&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Poxhewn&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Quadice&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Quotecity&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Randrill&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Rankfind&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Ranktech&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Recognisedwimp&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Regexsay&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Reliablepaver&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Remembergabbro&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Salttrans&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Sandhillrisk&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Scarygout&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Shrimpssecurity&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Sternlinguistic&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Superepoch&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Techlux&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Theirordered&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Thrushemillwright&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Trans-Dexon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Transcon&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Truesaokix&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Tryfanscaly&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Turboprop&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Turbulentbridle&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Vaialane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Villadox&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Voleworry&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Volhouse&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Wimpleddrift&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Y-Corporation&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zathhow&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zenzootrax&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zimdex&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zumma-Lane&quot;' />
                  <groupfilter function='member' level='[none:Name (Finances):nk]' member='&quot;Zun-Ex&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[avg:Calculation_1172624766872014849:qk]</column>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867119534082:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' value='149' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[avg:Calculation_1172624766872014849:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867120156676:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867119534082:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' />
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lqypjj08heq81129dt8c1rlz97p].[avg:Calculation_1172624766872014849:qk] + ([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867119534082:qk] + [federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867120156676:qk]))</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{9BF4A8C6-2C84-4CF6-B481-427C93743138}' />
    </worksheet>
    <worksheet name='Performance Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='17'>Performance Overview of all </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='real' name='[2020 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2020 Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2020 Revenue]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Revenue]' role='measure' type='quantitative' />
            <column caption='Total Expenses(2020&amp;2021)' datatype='real' name='[Calculation_1172624766870077440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2020 Expenses]+[2021 Expenses]' />
            </column>
            <column caption='Total Profit(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873223170]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Profit]+[2020 Profit]' />
            </column>
            <column caption='Total Revenue(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873374723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Revenue]+[2020 Revenue]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172624766870077440]' derivation='Sum' name='[sum:Calculation_1172624766870077440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1172624766873223170]' derivation='Sum' name='[sum:Calculation_1172624766873223170:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1172624766873374723]' derivation='Sum' name='[sum:Calculation_1172624766873374723:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873223170:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873223170:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk] + ([federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766870077440:qk] + [federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873223170:qk]))</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{2D3536B4-E34E-4A06-A8FF-CBFE40C80ADD}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='17'>High  Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overview+ (Assigmnent 2 Sample Data)' name='federated.0lqypjj08heq81129dt8c1rlz97p' />
          </datasources>
          <datasource-dependencies datasource='federated.0lqypjj08heq81129dt8c1rlz97p'>
            <column datatype='integer' name='[2020 Revenue]' role='measure' type='quantitative' />
            <column datatype='real' name='[2021 Revenue]' role='measure' type='quantitative' />
            <column caption='Total Revenue(2020&amp;2021)' datatype='real' name='[Calculation_1172624766873374723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[2021 Revenue]+[2020 Revenue]' />
            </column>
            <column caption='Revenue Growth rate' datatype='real' name='[Calculation_2088262867118964737]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([2021 Revenue] - [2020 Revenue]) / [2020 Revenue]' />
            </column>
            <column datatype='string' name='[Name (Finances)]' role='dimension' type='nominal' />
            <column-instance column='[Name (Finances)]' derivation='None' name='[none:Name (Finances):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1172624766873374723]' derivation='Sum' name='[sum:Calculation_1172624766873374723:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2088262867118964737]' derivation='Sum' name='[sum:Calculation_2088262867118964737:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1172624766873374723])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name (Finances):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_2088262867118964737:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]</rows>
        <cols>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</cols>
      </table>
      <simple-id uuid='{9ECC2A61-BD1E-4C50-B965-522E20CD292F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98272' id='9' param='vert' type-v2='layout-flow' w='99002' x='499' y='864'>
            <zone h='98272' id='7' type-v2='layout-basic' w='99002' x='499' y='864'>
              <zone h='40065' id='1' name='Expenses' w='49501' x='50000' y='864'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29266' id='3' name='Revenue' w='49501' x='499' y='864'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38659' id='4' name='Growth' w='49501' x='499' y='30130'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='58207' id='5' name='Performance Metrics ' w='49501' x='50000' y='40929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30347' id='6' name='Financial Performance' w='49501' x='499' y='68789'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7D572DBA-C451-449B-BEE8-A51A624FFCA5}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16494'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Top 5 by Financial Performance ' captured-sheet='Financial Performance' id='2' />
                  <story-point caption='Top 5 Performance metrics' captured-sheet='Performance Metrics ' id='3' />
                  <story-point caption='Summary ' captured-sheet='Dashboard 1' id='4' />
                  <story-point caption='Startup Performance Overview' captured-sheet='Performance Overview' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{EDF52AFE-84A2-4CF8-BD99-C0356B6C7B26}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Performance Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873223170:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Year Founded:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49A106FA-B72C-4477-971D-9FEC3EB109FF}' />
    </window>
    <window class='worksheet' name='Expenses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='19' type='pages' />
            <card size='60' type='filters' />
            <card size='138' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[__tableau_internal_object_id__].[cnt:Finances_6B836DEF9BDD4CCDA6167D9C62BB6862:qk]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Calculation_1172624766872014849:qk]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6A3ABCD-7BEE-4ACF-B02F-1649B37005BD}' />
    </window>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EECE2F15-4C1D-425F-AE4E-006AC119D8DD}' />
    </window>
    <window class='worksheet' name='Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B07EB56-60C7-425A-AAFF-67781CBA0F39}' />
    </window>
    <window class='worksheet' name='Performance Metrics '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:ID (Finances):ok]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Industry:nk]</field>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{630E1215-5C51-4B6D-9B82-8777F6BF3C0C}' />
    </window>
    <window class='worksheet' name='Financial Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='68' type='filters' />
            <card size='301' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[federated.0lqypjj08heq81129dt8c1rlz97p].[sum:Calculation_1172624766873374723:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lqypjj08heq81129dt8c1rlz97p].[none:Name (Finances):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{783B26CF-17C7-4AB3-8CA2-A49F5F685899}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Expenses'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Financial Performance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Growth'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Performance Metrics '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' />
      <simple-id uuid='{55D399ED-7B40-4D63-AB2E-0460EB98BBEC}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A9FE45B7-3746-4846-94B3-A28EE9B99755}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Expenses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Financial Performance' width='192'>
      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
      NIL3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Growth' width='192'>
      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
      uN19lf8fljWoljYgFhAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Performance Metrics ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance Overview' width='192'>
      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
      6KRNJjULuesAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue' width='192'>
      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
      243H4+X/Ax4j6hT9cFg0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      HbclIREP/j/rZ0O/4nD/pAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
